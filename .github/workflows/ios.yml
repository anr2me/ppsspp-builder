name: iOS starter workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: {}
    #inputs:
    #  buildVariant:
    #    type: choice
    #    description: 'Build Variant'
    #    required: true
    #    default: 'release'
    #    options: 
    #    - release
    #    - debug

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout ppsspp
        id: ppsspp
        run: |
          git clone https://github.com/hrydgard/ppsspp.git
          cd ppsspp
          git submodule update --init --recursive
          git fetch --deepen=15000 --no-recurse-submodules --tags
          echo "version_number=$(git describe --tags --match='v*' | ${SED} -e 's@-\([^-]*\)-\([^-]*\)$$@-\1-\2@;s@^v@@;s@%@~@g')" >> $GITHUB_OUTPUT
          

      - name: Install Prerequisites
        run: |
          brew upgrade
          brew install ldid dpkg python3 gnu-sed make cmake sdl2 libzip snappy
          # Check Xcode version
          xcodebuild -version
          # List available Xcode versions
          ls /Applications | grep Xcode
          # Select a specific Xcode version. The recommended Xcode version is 9.4.1 according to https://github.com/Halo-Michael/ppsspp-builder
          #sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
          #sudo iod-setup sdk
          
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          #default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          #echo $default | cat >default
          #echo Using default scheme: $default
          
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          #if [ $scheme = default ]; then scheme=$(cat default); fi
          #if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          #file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          #xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
          make all

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-${{ github.event.inputs.buildVariant }} build
          path: |
            PPSSPP*.ipa
            org.ppsspp*.deb
          
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          #if [ $scheme = default ]; then scheme=$(cat default); fi
          #if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          #file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          #xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
